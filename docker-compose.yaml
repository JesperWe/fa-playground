version: '3'

services:
  db:
    image: postgres:12.9
    environment:
      PGDATA: /var/lib/postgresql/data/pgdata
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - fa_net
    restart: unless-stopped
    volumes:
      - db_data:/var/lib/postgresql/data

  search:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.0
    container_name: search
    depends_on:
      db:
        condition: service_healthy
    environment:
      cluster.name: fusionauth
      bootstrap.memory_lock: "true"
      discovery.type: single-node
      ES_JAVA_OPTS: ${ES_JAVA_OPTS}
    healthcheck:
      test: [ "CMD", "curl",  "--fail" ,"--write-out", "'HTTP %{http_code}'", "--silent", "--output", "/dev/null", "http://localhost:9200/" ]
      interval: 5s
      timeout: 20s
      retries: 20
    networks:
      - fa_net
    restart: unless-stopped
    logging:
      driver: none
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - search_data:/usr/share/elasticsearch/data

  fusionauth:
    image: fusionauth/fusionauth-app:latest
    depends_on:
      db:
        condition: service_healthy
      search:
        condition: service_healthy
    environment:
      DATABASE_URL: jdbc:postgresql://db:5432/fusionauth
      DATABASE_ROOT_USERNAME: ${POSTGRES_USER}
      DATABASE_ROOT_PASSWORD: ${POSTGRES_PASSWORD}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      FUSIONAUTH_APP_MEMORY: ${FUSIONAUTH_APP_MEMORY}
      FUSIONAUTH_APP_RUNTIME_MODE: development
      FUSIONAUTH_APP_URL: https://${HOSTNAME}
      SEARCH_SERVERS: http://search:9200
      SEARCH_TYPE: elasticsearch
    networks:
      - fa_net
    restart: unless-stopped
    volumes:
      - fusionauth_config:/usr/local/fusionauth/config

  nginx-debug:
    image: nginx:stable
    networks:
      - fa_net
    profiles:
      - debug

  nginx-setup:
    image: nginx:stable
    # Only run during setup
    profiles:
      - setup
    volumes:
      - ./http_setup.conf:/etc/nginx/conf.d/default.conf
      - certbot_www:/var/www/certbot
    ports:
      - 80:80
      - 443:443

  nginx:
    image: nginx:stable
    depends_on:
      - fusionauth
    restart: unless-stopped
    networks:
      - fa_net
    volumes:
      - ./http_default.conf:/etc/nginx/conf.d/fusionauth.conf
      - letsencrypt:/etc/letsencrypt
      - certbot_www:/var/www/certbot
    ports:
      - 80:80
      - 443:443

  certbot:
    image: certbot/certbot
    volumes:
      - letsencrypt:/etc/letsencrypt
      - certbot_www:/var/www/certbot

networks:
  fa_net:
    driver: bridge

volumes:
  db_data:
  fusionauth_config:
  search_data:
  letsencrypt:
  certbot_www:
